{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Users/Users.module.css","redux/profile-reducer.tsx","redux/dialogs-reducer.tsx","redux/sidebar-reducer.tsx","redux/users-reducer.tsx","redux/redux-store.tsx","components/Header/Header.tsx","components/Navbar/Navbar.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/DialogsItem/DialogsItem.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx","components/Users/Users.tsx","components/Users/UsersContainer.tsx","App.tsx","index.tsx","components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css"],"names":["module","exports","initialState","posts","message","likesCount","newPostText","profileReducer","state","action","type","newPost","id","newText","dialogs","name","messages","newMessageBody","dialogsReducer","body","inititalState","sidebar","sidebarReducer","users","usersReducer","map","u","userId","followed","reducers","combineReducers","profilePage","dialogsPage","sidebarPage","usersPage","store","createStore","Header","className","s","header","src","alt","Navbar","nav","item","to","activeClassName","activeLink","active","href","ProfileInfo","mainImage","descriptionBlock","Post","props","MyPosts","postsElement","p","key","postsBlock","value","onChange","e","text","currentTarget","changeNewText","onClick","addPost","MyPostsContainer","connect","dispatch","changeNewTextActionCreator","Profile","Message","dialog","DialogItem","Dialogs","dialogElement","d","messageElement","m","dialogsItems","target","updateNewMessageBody","placeholder","sendMessage","DialogsContainer","Users","length","setUsers","photoUrl","fullName","status","location","country","city","styles","userPhoto","unfollow","follow","followAC","unfollowAC","setUsersAC","App","path","render","UsersContainer","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a76ff84.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainImage\":\"ProfileInfo_mainImage__1C5Wq\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1hVfg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1Bz1M\",\"posts\":\"MyPosts_posts__20llT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2I21n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__f_ukf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__3FPWP\"};","const ADD_POST = 'ADD-POST';\r\nconst CHANGE_NEW_TEXT = 'CHANGE-NEW-TEXT';\r\n\r\nexport type ProfilePageType = {\r\n    posts: Array<PostsType>\r\n    newPostText: string\r\n}\r\nexport type PostsType = {\r\n    message: string,\r\n    id?: number,   // здесь для id необезательный тип указал\r\n    likesCount: string,\r\n}\r\n\r\nexport type ActionType = AddPostActionCreatorType |  // Типизация action\r\n    ChangeNewTextActionCreatorType\r\n\r\nexport type AddPostActionCreatorType = {\r\n    type: typeof ADD_POST\r\n}\r\nexport type ChangeNewTextActionCreatorType = {\r\n    type: typeof CHANGE_NEW_TEXT\r\n    newText: string\r\n}\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {message: 'Hello, how are you doing', likesCount: '10',},\r\n        {message: 'Hay, nothing', likesCount: '25',},\r\n        {message: 'learn React, nigger!', likesCount: '1',},\r\n    ],\r\n    newPostText: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action: ActionType): ProfilePageType => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost: PostsType = {\r\n                id: 5,\r\n                message: state.newPostText,\r\n                likesCount: '28'\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            }\r\n        case CHANGE_NEW_TEXT:\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const addPostActionCreator = (): AddPostActionCreatorType => ({type: ADD_POST})\r\nexport const changeNewTextActionCreator = (text: string): ChangeNewTextActionCreatorType =>\r\n    ({type: CHANGE_NEW_TEXT, newText: text})\r\n\r\nexport default profileReducer;","const UPDATE_NEW_MESSAGE_BODY = 'UPDATE_NEW_MESSAGE_BODY'\r\nconst SEND_MESSAGE = 'SEND_MESSAGE'\r\n\r\nexport type DialogsPageType = {\r\n    dialogs: Array<DialogsType>\r\n    messages: Array<MessageType>\r\n    newMessageBody: string\r\n}\r\n\r\nexport type MessageType = {\r\n    message: string,\r\n    id: number,\r\n}\r\nexport type DialogsType = {\r\n    name: string,\r\n    id: string\r\n}\r\n\r\nexport type ActionType = sendMessageCreatorType |\r\n    updateNewMessageBodyCreatorType\r\nexport type sendMessageCreatorType = {\r\n    type: typeof SEND_MESSAGE\r\n}\r\nexport type updateNewMessageBodyCreatorType = {\r\n    type: typeof UPDATE_NEW_MESSAGE_BODY\r\n    body: string\r\n}\r\n\r\nlet initialState: DialogsPageType = {\r\n    dialogs: [\r\n        {name: \"Andriy\", id: '1'},\r\n        {name: \"Dimych\", id: '2'},\r\n        {name: \"Vika\", id: '3'},\r\n        {name: \"Alina\", id: '4'},\r\n        {name: \"Maxim\", id: '5'}\r\n    ],\r\n    messages: [\r\n        {message: 'Hay', id: 1},\r\n        {message: 'How are you?', id: 2},\r\n        {message: 'Bye', id: 3},\r\n        {message: 'Yo', id: 4},\r\n        {message: 'Yo', id: 5},\r\n    ],\r\n    newMessageBody: ''\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action: ActionType): DialogsPageType => {\r\n\r\n    switch (action.type) {\r\n        case UPDATE_NEW_MESSAGE_BODY:\r\n            return {\r\n                ...state,\r\n                newMessageBody: action.body\r\n            }\r\n        case SEND_MESSAGE:\r\n            let body = state.newMessageBody;\r\n            return {\r\n                ...state,\r\n                newMessageBody: '',\r\n                messages: [...state.messages, {message: body, id: 6}]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (): sendMessageCreatorType => ({type: SEND_MESSAGE})\r\nexport const updateNewMessageBodyCreator = (text: string): updateNewMessageBodyCreatorType =>\r\n    ({type: UPDATE_NEW_MESSAGE_BODY, body: text})\r\n\r\nexport default dialogsReducer;","\r\n\r\nexport type sidebarType = {}\r\n\r\nlet inititalState: sidebarType = {\r\n    sidebar: {}\r\n}\r\n\r\nconst sidebarReducer = (state = inititalState, action: any ): sidebarType => {\r\n\r\n    return state\r\n}\r\n\r\nexport default sidebarReducer;","const FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET_USERS'\r\n\r\nexport type UsersPageType = {\r\n    users: Array<UsersType>\r\n}\r\nexport type UsersType = {\r\n    id: number\r\n    photoUrl: string\r\n    followed: boolean\r\n    fullName: string\r\n    status: string\r\n    location: LocationType\r\n}\r\nexport type LocationType = {\r\n    country: string,\r\n    city: string\r\n}\r\n\r\nexport type FollowACType = {\r\n    type: typeof FOLLOW\r\n    userId: number\r\n}\r\nexport type UnfollowACType = {\r\n    type: typeof UNFOLLOW\r\n    userId: number\r\n}\r\nexport type SetUsersACType = {\r\n    type: typeof SET_USERS\r\n    users: Array<UsersType>\r\n}\r\nexport type UsersACTYPE = FollowACType | UnfollowACType | SetUsersACType\r\n\r\nlet initialState = {\r\n    users: [] as Array<UsersType>,\r\n}\r\n\r\nconst usersReducer = (state = initialState, action: UsersACTYPE): UsersPageType => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: [...state.users, ...action.users]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const followAC = (userId: number): FollowACType => ({type: FOLLOW, userId})\r\nexport const unfollowAC = (userId: number): UnfollowACType =>\r\n    ({type: UNFOLLOW, userId})\r\nexport const setUsersAC = (users: Array<UsersType>): SetUsersACType =>\r\n    ({type: SET_USERS, users})\r\n\r\nexport default usersReducer;","import {combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\n\r\nlet reducers = combineReducers(\r\n    {\r\n        profilePage: profileReducer,\r\n        dialogsPage: dialogsReducer,\r\n        sidebarPage: sidebarReducer,\r\n        usersPage: usersReducer\r\n    }\r\n)\r\n\r\nlet store = createStore(reducers)\r\n\r\nexport default store","import React from 'react';\r\nimport s from './Header.module.css'\r\n\r\n\r\n\r\nconst Header = () => {\r\n  return (\r\n      <header className={s.header}>\r\n          <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/1c/DC_Comics_logo.png/768px-DC_Comics_logo.png\" alt=\"avatar\"/>\r\n      </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport s from './Navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Message</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a href=\"#\">News</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a href=\"#\">Music</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a href=\"#\">Settings</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport s from './ProfileInfo.module.css'\r\n\r\nconst ProfileInfo = () => {\r\n    return (\r\n        <div>\r\n            <div className={s.mainImage}>\r\n                <img\r\n                    src=\"https://images.pexels.com/photos/302804/pexels-photo-302804.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                    alt=\"image\"/>\r\n            </div>\r\n            <div className={s.descriptionBlock}>ava + description</div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport s from './Post.module.css'\r\n\r\n\r\ntype PostType = {\r\n    message: string,\r\n    likesCount: string\r\n}\r\n\r\nconst Post = (props: PostType) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://cdn.iconscout.com/icon/free/png-256/avatar-370-456322.png\" alt=\"ava\"/>\r\n            {props.message}\r\n            <div><span>{props.likesCount}</span></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;\r\n\r\n","import React, {ChangeEvent} from 'react';\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport { PostsType } from '../../../redux/profile-reducer';\r\n\r\ntype MyPostsType = {\r\n    posts: Array<PostsType> // Типизация из Profile-reducer ???????\r\n    newPostText: string\r\n    addPost: () => void\r\n    changeNewText: (text:string) => void\r\n}\r\n\r\nconst MyPosts = (props: MyPostsType) => {\r\n\r\n    let postsElement = props.posts.map(p => <Post key={p.id}\r\n                                                  message={p.message}\r\n                                                  likesCount={p.likesCount}/>)\r\n\r\n    let onAddPost = () => {\r\n        props.addPost()\r\n    }\r\n\r\n    const onPostChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        let text = e.currentTarget.value\r\n        props.changeNewText(text)\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <div>\r\n                    <textarea\r\n                        value={props.newPostText}\r\n                        onChange={onPostChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <button onClick={onAddPost}>Add post</button>\r\n                </div>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElement}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport {addPostActionCreator, changeNewTextActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state: any) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        changeNewText: (text: string) => {\r\n            let action = changeNewTextActionCreator(text)\r\n            dispatch(action)\r\n        },\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator())\r\n        },\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = () => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo />\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\"\r\n\r\n\r\ntype MessageType = {\r\n    message: string\r\n}\r\n\r\nconst Message = (props: MessageType) => {\r\n    return (\r\n        <div className={s.dialog}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\ntype DialogItemType = {\r\n    name: string,\r\n    id: string\r\n}\r\n\r\nconst DialogItem = (props: DialogItemType) => {\r\n    return (\r\n        <div className={s.dialog + \" \" + s.active}>\r\n            <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React, {ChangeEvent} from \"react\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogsItem/DialogsItem\";\r\nimport {DialogsPageType} from \"../../redux/dialogs-reducer\";\r\n\r\n\r\ntype DialogsType = {\r\n    dialogsPage: DialogsPageType\r\n    sendMessage: () => void\r\n    updateNewMessageBody: (body: string) => void\r\n}\r\n\r\nconst Dialogs = (props: DialogsType) => {\r\n\r\n    let state = props.dialogsPage\r\n\r\n    let dialogElement = state.dialogs.map(d => <DialogItem key={d.id}\r\n                                                           name={d.name}\r\n                                                           id={d.id}/>)\r\n\r\n    let messageElement = state.messages.map(m => <Message key={m.id}\r\n                                                          message={m.message}/>)\r\n\r\n    let newMessageBody = state.newMessageBody\r\n\r\n\r\n    let onSendMessageClick = () => {\r\n        props.sendMessage()\r\n    }\r\n    let onNewMessageChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        let body = e.target.value\r\n        props.updateNewMessageBody(body)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogElement}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messageElement}</div>\r\n                <div>\r\n                    <textarea\r\n                        value={newMessageBody}\r\n                        onChange={onNewMessageChange}\r\n                        placeholder={'send message'}\r\n                    ></textarea>\r\n                </div>\r\n                <div>\r\n                    <button onClick={onSendMessageClick}>Send Message</button>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {\r\n    sendMessageCreator,\r\n    updateNewMessageBodyCreator,\r\n} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state: any) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        sendMessage : () => {\r\n            dispatch(sendMessageCreator())\r\n        },\r\n        updateNewMessageBody : (body: string) =>{\r\n            dispatch(updateNewMessageBodyCreator(body))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default DialogsContainer;","import React from 'react'\r\nimport styles from './Users.module.css'\r\n\r\nconst Users = (props: any) => {\r\n\r\n    if (props.users.length === 0) {\r\n        props.setUsers([\r\n            {\r\n                id: 1,\r\n                photoUrl: 'https://cdn2.iconfinder.com/data/icons/people-occupation-job/64/Ninja-Warrior-Assassin-Japan-Fighter-Avatar-Martial_arts-512.png',\r\n                followed: true,\r\n                fullName: 'Andiy',\r\n                status: 'Junior',\r\n                location: {country: 'Ukraine', city: 'Kiev'}\r\n            },\r\n            {\r\n                id: 2,\r\n                photoUrl: 'https://cdn2.iconfinder.com/data/icons/people-occupation-job/64/Ninja-Warrior-Assassin-Japan-Fighter-Avatar-Martial_arts-512.png',\r\n                followed: false,\r\n                fullName: 'Voicek',\r\n                status: 'Middle',\r\n                location: {country: 'Poland', city: 'Krakow'}\r\n            },\r\n            {\r\n                id: 3,\r\n                photoUrl: 'https://cdn2.iconfinder.com/data/icons/people-occupation-job/64/Ninja-Warrior-Assassin-Japan-Fighter-Avatar-Martial_arts-512.png',\r\n                followed: false,\r\n                fullName: 'David',\r\n                status: 'Senior',\r\n                location: {country: 'England', city: 'London'}\r\n            },\r\n        ])\r\n    }\r\n\r\n    return <div>\r\n        {\r\n            props.users.map((u: { id: string | number | undefined; photoUrl: string | undefined; followed: any; fullName: React.ReactNode; status: React.ReactNode; location: { country: React.ReactNode; city: React.ReactNode } }) =>\r\n                <div key={u.id}>\r\n                <span>\r\n                    <div>\r\n                        <img src={u.photoUrl} className={styles.userPhoto}/>\r\n                    </div>\r\n                    <div>\r\n                        {u.followed\r\n                            ? <button onClick={() => {\r\n                                props.unfollow(u.id)\r\n                            }}>Unfollow</button>\r\n                            : <button onClick={() => {\r\n                                props.follow(u.id)\r\n                            }}>Follow</button>}\r\n\r\n                    </div>\r\n                </span>\r\n                    <span>\r\n                    <span>\r\n                        <div>{u.fullName}</div>\r\n                        <div>{u.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{u.location.country}</div>\r\n                        <div>{u.location.city}</div>\r\n                    </span>\r\n                </span>\r\n                </div>)\r\n        }\r\n    </div>\r\n\r\n}\r\n\r\nexport default Users;","import React from \"react\";\r\nimport Users from \"./Users\";\r\nimport {followAC, setUsersAC, unfollowAC} from \"../../redux/users-reducer\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state: any) => {\r\n    return{\r\n        users: state.usersPage.users\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: any) => {\r\n    return{\r\n        follow: (userId: any) => {\r\n            dispatch(followAC(userId))\r\n        },\r\n        unfollow: (userId: any) => {\r\n            dispatch(unfollowAC(userId))\r\n        },\r\n        setUsers: (users: any) => {\r\n            dispatch(setUsersAC(users))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Users)","import React from 'react';\r\nimport {BrowserRouter, Route} from 'react-router-dom';\r\nimport './App.css';\r\nimport Header from \"./components/Header/Header\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport Profile from \"./components/Profile/Profile\";\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <div className={'app-wrapper'}>\r\n                <Header/>\r\n                <Navbar/>\r\n                <div className={'app-wrapper-content'}>\r\n                    <Route path='/dialogs' render={() =>\r\n                        <DialogsContainer/>}\r\n                    />\r\n                    <Route path='/profile' render={() =>\r\n                        <Profile/>}\r\n                    />\r\n                    <Route path='/users' render={() =>\r\n                        <UsersContainer/>}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import store from \"./redux/redux-store\";\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {Provider} from \"react-redux\";\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2UV_k\",\"item\":\"Navbar_item__psXG3\",\"activeLink\":\"Navbar_activeLink__3Vsg1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__38gst\",\"dialogsItems\":\"Dialogs_dialogsItems__1F-1z\",\"active\":\"Dialogs_active__1JIuo\",\"dialog\":\"Dialogs_dialog__33mEz\",\"messages\":\"Dialogs_messages__7SKqO\"};"],"sourceRoot":""}