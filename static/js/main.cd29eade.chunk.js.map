{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Header/Header.tsx","components/Navbar/Navbar.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","redux/profile-reducer.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","storeContext.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","redux/dialogs-reducer.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/DialogsItem/DialogsItem.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx","App.tsx","redux/sidebar-reducer.tsx","redux/redux-store.tsx","index.tsx","components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css"],"names":["module","exports","Header","className","s","header","src","alt","Navbar","nav","item","to","activeClassName","activeLink","active","href","ProfileInfo","mainImage","descriptionBlock","initialState","posts","message","likesCount","newPostText","profileReducer","state","action","type","newPost","id","push","newText","Post","props","MyPosts","postsElement","map","p","key","postsBlock","value","onChange","e","text","currentTarget","changeNewText","onClick","addPost","StoreContext","React","createContext","Provider","store","children","MyPostsContainer","Consumer","getState","profilePage","changeNewTextActionCreator","dispatch","Profile","dialogs","name","messages","newMessageBody","dialogsReducer","body","Message","dialog","DialogItem","Dialogs","dialogsPage","dialogElement","d","messageElement","m","dialogsItems","target","updateNewMessageBody","placeholder","sendMessage","DialogsContainer","App","path","render","inititalState","sidebar","sidebarReducer","reducers","combineReducers","sidebarPage","createStore","rerenderEntireTree","ReactDOM","StrictMode","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.cd29eade.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainImage\":\"ProfileInfo_mainImage__1C5Wq\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1hVfg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1Bz1M\",\"posts\":\"MyPosts_posts__20llT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2I21n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__f_ukf\"};","import React from 'react';\r\nimport s from './Header.module.css'\r\n\r\n\r\n\r\nconst Header = () => {\r\n  return (\r\n      <header className={s.header}>\r\n          <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/1c/DC_Comics_logo.png/768px-DC_Comics_logo.png\" alt=\"avatar\"/>\r\n      </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport s from './Navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Message</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a href=\"#\">News</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a href=\"#\">Music</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a href=\"#\">Settings</a>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport s from './ProfileInfo.module.css'\r\n\r\nconst ProfileInfo = () => {\r\n    return (\r\n        <div>\r\n            <div className={s.mainImage}>\r\n                <img\r\n                    src=\"https://images.pexels.com/photos/302804/pexels-photo-302804.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n                    alt=\"image\"/>\r\n            </div>\r\n            <div className={s.descriptionBlock}>ava + description</div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;\r\n","const ADD_POST = 'ADD-POST';\r\nconst CHANGE_NEW_TEXT = 'CHANGE-NEW-TEXT';\r\n\r\nexport type ProfilePageType = {\r\n    posts: Array<PostsType>\r\n    newPostText: string\r\n}\r\nexport type PostsType = {\r\n    message: string,\r\n    id?: number,   // здесь для id необезательный тип указал\r\n    likesCount: string,\r\n}\r\n\r\nexport type ActionType = AddPostActionCreatorType |  // Типизация action\r\n    ChangeNewTextActionCreatorType\r\n\r\nexport type AddPostActionCreatorType = {\r\n    type: typeof ADD_POST\r\n}\r\nexport type ChangeNewTextActionCreatorType = {\r\n    type: typeof CHANGE_NEW_TEXT\r\n    newText: string\r\n}\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {message: 'Hello, how are you doing', likesCount: '10',},\r\n        {message: 'Hay, nothing', likesCount: '25',},\r\n        {message: 'learn React, nigger!', likesCount: '1',},\r\n    ],\r\n    newPostText: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action: ActionType): ProfilePageType => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost: PostsType = {\r\n                id: 5,\r\n                message: state.newPostText,\r\n                likesCount: '28'\r\n            };\r\n            state.posts.push(newPost)\r\n            state.newPostText = ''\r\n            return state\r\n        case CHANGE_NEW_TEXT:\r\n            state.newPostText = action.newText\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const addPostActionCreator = (): AddPostActionCreatorType => ({type: ADD_POST})\r\nexport const changeNewTextActionCreator = (text: string): ChangeNewTextActionCreatorType =>\r\n    ({type: CHANGE_NEW_TEXT, newText: text})\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport s from './Post.module.css'\r\n\r\n\r\ntype PostType = {\r\n    message: string,\r\n    likesCount: string\r\n}\r\n\r\nconst Post = (props: PostType) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://cdn.iconscout.com/icon/free/png-256/avatar-370-456322.png\" alt=\"ava\"/>\r\n            {props.message}\r\n            <div><span>{props.likesCount}</span></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;\r\n\r\n","import React, {ChangeEvent} from 'react';\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport { PostsType } from '../../../redux/profile-reducer';\r\n\r\ntype MyPostsType = {\r\n    posts: Array<PostsType> // Типизация из Profile-reducer ???????\r\n    newPostText: string\r\n    addPost: () => void\r\n    changeNewText: (text:string) => void\r\n}\r\n\r\nconst MyPosts = (props: MyPostsType) => {\r\n\r\n    let postsElement = props.posts.map(p => <Post key={p.id}\r\n                                                  message={p.message}\r\n                                                  likesCount={p.likesCount}/>)\r\n\r\n    let onAddPost = () => {\r\n        props.addPost()\r\n    }\r\n\r\n    const onPostChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        let text = e.currentTarget.value\r\n        props.changeNewText(text)\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <div>\r\n                    <textarea\r\n                        value={props.newPostText}\r\n                        onChange={onPostChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <button onClick={onAddPost}>Add post</button>\r\n                </div>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElement}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\n\r\nconst StoreContext = React.createContext(null)\r\n\r\nexport const Provider = (props: { store: any; children: React.ReactNode; }) => {\r\n    return <StoreContext.Provider value={props.store}>\r\n        {props.children}\r\n        </StoreContext.Provider>\r\n}\r\n\r\nexport default StoreContext","import React from 'react';\r\nimport {addPostActionCreator, changeNewTextActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport StoreContext from \"../../../storeContext\";\r\n\r\n\r\nconst MyPostsContainer = () => {\r\n\r\n    return (\r\n        <StoreContext.Consumer>\r\n            {\r\n                (store: any) => { // ANY!!!!!!!!!!!!!!!!!!!!!!!!!\r\n                    let state = store.getState().profilePage\r\n                    let addPost = () => {\r\n                        store.dispatch(addPostActionCreator())\r\n                    }\r\n                    let onPostChange = (text: string) => {\r\n                        let action = changeNewTextActionCreator(text)\r\n                        store.dispatch(action)\r\n                    }\r\n                    return <MyPosts\r\n                        posts={state.posts}\r\n                        changeNewText={onPostChange}\r\n                        addPost={addPost}\r\n                        newPostText={state.newPostText}\r\n                    />\r\n                }\r\n            }\r\n        </StoreContext.Consumer>\r\n    );\r\n}\r\n\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = () => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo />\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","const UPDATE_NEW_MESSAGE_BODY = 'UPDATE_NEW_MESSAGE_BODY'\r\nconst SEND_MESSAGE = 'SEND_MESSAGE'\r\n\r\nexport type DialogsPageType = {\r\n    dialogs: Array<DialogsType>\r\n    messages: Array<MessageType>\r\n    newMessageBody: string\r\n}\r\n\r\nexport type MessageType = {\r\n    message: string,\r\n    id: number,\r\n}\r\nexport type DialogsType = {\r\n    name: string,\r\n    id: string\r\n}\r\n\r\nexport type ActionType =  sendMessageCreatorType |\r\n    updateNewMessageBodyCreatorType\r\nexport type sendMessageCreatorType = {\r\n    type: typeof SEND_MESSAGE\r\n}\r\nexport type updateNewMessageBodyCreatorType = {\r\n    type: typeof UPDATE_NEW_MESSAGE_BODY\r\n    body: string\r\n}\r\n\r\nlet initialState: DialogsPageType = {\r\n        dialogs: [\r\n            {name: \"Andriy\", id: '1'},\r\n            {name: \"Dimych\", id: '2'},\r\n            {name: \"Vika\", id: '3'},\r\n            {name: \"Alina\", id: '4'},\r\n            {name: \"Maxim\", id: '5'}\r\n        ],\r\n        messages: [\r\n            {message: 'Hay', id: 1},\r\n            {message: 'How are you?', id: 2},\r\n            {message: 'Bye', id: 3},\r\n            {message: 'Yo', id: 4},\r\n            {message: 'Yo', id: 5},\r\n        ],\r\n        newMessageBody: ''\r\n    }\r\n\r\nconst dialogsReducer = (state = initialState, action: ActionType): DialogsPageType => {\r\n\r\n    switch (action.type) {\r\n        case \"UPDATE_NEW_MESSAGE_BODY\":\r\n            state.newMessageBody = action.body\r\n            return state\r\n        case \"SEND_MESSAGE\":\r\n            let body = state.newMessageBody\r\n            state.newMessageBody = ''\r\n            state.messages.push({message: body, id: 6})\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (): sendMessageCreatorType => ({type: SEND_MESSAGE})\r\nexport const updateNewMessageBodyCreator = (text: string): updateNewMessageBodyCreatorType =>\r\n    ({type: UPDATE_NEW_MESSAGE_BODY, body: text})\r\n\r\nexport default dialogsReducer;","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\"\r\n\r\n\r\ntype MessageType = {\r\n    message: string\r\n}\r\n\r\nconst Message = (props: MessageType) => {\r\n    return (\r\n        <div className={s.dialog}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\ntype DialogItemType = {\r\n    name: string,\r\n    id: string\r\n}\r\n\r\nconst DialogItem = (props: DialogItemType) => {\r\n    return (\r\n        <div className={s.dialog + \" \" + s.active}>\r\n            <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React, {ChangeEvent} from \"react\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogsItem/DialogsItem\";\r\nimport {DialogsPageType} from \"../../redux/dialogs-reducer\";\r\n\r\n\r\ntype DialogsType = {\r\n    dialogsPage: DialogsPageType\r\n    sendMessage: () => void\r\n    updateNewMessageBody: (body: string) => void\r\n}\r\n\r\nconst Dialogs = (props: DialogsType) => {\r\n\r\n    let state = props.dialogsPage\r\n\r\n    let dialogElement = state.dialogs.map(d => <DialogItem key={d.id}\r\n                                                           name={d.name}\r\n                                                           id={d.id}/>)\r\n\r\n    let messageElement = state.messages.map(m => <Message key={m.id}\r\n                                                          message={m.message}/>)\r\n\r\n    let newMessageBody = state.newMessageBody\r\n\r\n\r\n    let onSendMessageClick = () => {\r\n        props.sendMessage()\r\n    }\r\n    let onNewMessageChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        let body = e.target.value\r\n        props.updateNewMessageBody(body)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogElement}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messageElement}</div>\r\n                <div>\r\n                    <textarea\r\n                        value={newMessageBody}\r\n                        onChange={onNewMessageChange}\r\n                        placeholder={'send message'}\r\n                    ></textarea>\r\n                </div>\r\n                <div>\r\n                    <button onClick={onSendMessageClick}>Send Message</button>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {\r\n    sendMessageCreator,\r\n    updateNewMessageBodyCreator,\r\n} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport StoreContext from \"../../storeContext\";\r\n\r\n\r\nconst DialogsContainer = () => {\r\n    return (\r\n        <StoreContext.Consumer>\r\n            {\r\n                (store:any) => { // ANY !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n                    let state = store.getState().dialogsPage;\r\n                    let onsendMessageCreator = () => {\r\n                        store.dispatch(sendMessageCreator())\r\n                    }\r\n                    let onNewMessageChange = (body: string) => {\r\n                        store.dispatch(updateNewMessageBodyCreator(body))\r\n                    }\r\n                    return <Dialogs\r\n                        updateNewMessageBody={onNewMessageChange}\r\n                        sendMessage={onsendMessageCreator}\r\n                        dialogsPage={state}\r\n                    />\r\n                }\r\n            }\r\n        </StoreContext.Consumer>\r\n    )\r\n}\r\n\r\nexport default DialogsContainer;","import React from 'react';\r\nimport {BrowserRouter, Route} from 'react-router-dom';\r\nimport './App.css';\r\nimport Header from \"./components/Header/Header\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport Profile from \"./components/Profile/Profile\";\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\n\r\nconst App = () => {\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <div className={'app-wrapper'}>\r\n                <Header/>\r\n                <Navbar/>\r\n                <div className={'app-wrapper-content'}>\r\n                    <Route path='/dialogs' render={() =>\r\n                        <DialogsContainer />}\r\n                    />\r\n                    <Route path='/profile' render={() =>\r\n                        <Profile />}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","\r\n\r\nexport type sidebarType = {}\r\n\r\nlet inititalState: sidebarType = {\r\n    sidebar: {}\r\n}\r\n\r\nconst sidebarReducer = (state = inititalState, action: any ): sidebarType => {\r\n\r\n    return state\r\n}\r\n\r\nexport default sidebarReducer;","import {combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\n\r\nlet reducers = combineReducers(\r\n    {\r\n        profilePage: profileReducer,\r\n        dialogsPage: dialogsReducer,\r\n        sidebarPage: sidebarReducer\r\n    }\r\n)\r\n\r\nlet store = createStore(reducers)\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {Provider} from \"./storeContext\";\r\nimport store from \"./redux/redux-store\";\r\nimport {ProfilePageType} from \"./redux/profile-reducer\";\r\nimport {DialogsPageType} from \"./redux/dialogs-reducer\";\r\nimport {sidebarType} from \"./redux/sidebar-reducer\";\r\n\r\n\r\nlet rerenderEntireTree = (state: { readonly \"[$CombinedState]\"?: undefined } & { profilePage: ProfilePageType ; dialogsPage: DialogsPageType; sidebarPage: sidebarType }) => {\r\n    ReactDOM.render(\r\n        <React.StrictMode>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </React.StrictMode>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\nrerenderEntireTree(store.getState())\r\n\r\nstore.subscribe(() => {\r\n    let state = store.getState()\r\n    rerenderEntireTree(store.getState())\r\n})","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2UV_k\",\"item\":\"Navbar_item__psXG3\",\"activeLink\":\"Navbar_activeLink__3Vsg1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__38gst\",\"dialogsItems\":\"Dialogs_dialogsItems__1F-1z\",\"active\":\"Dialogs_active__1JIuo\",\"dialog\":\"Dialogs_dialog__33mEz\",\"messages\":\"Dialogs_messages__7SKqO\"};"],"sourceRoot":""}